pipeline {
    agent any
    tools {
        maven "mymaven"
        sonarscanner "sonarscanner" 
    }
    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/AAPaintsil24/web-app.git'
            }
        }
        stage('clean and package') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('code analyis') {
            steps {
                script {
                    withSonarQubeEnv('sonarserver') {
                        sh "sonar-scanner -Dsonar.projectKey=kofi-webapp"
                    }
                }
            }
        }
        stage('Quality gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('nexus uploads') {
            steps {
                nexusArtifactUploader artifacts: [[artifactId: 'maven-web-application', classifier: '', file: '/var/lib/jenkins/workspace/albert-pipeline/target/web-app.war', type: 'war']], credentialsId: 'nexus-credentials', groupId: 'com.mt', nexusUrl: '3.147.85.91:8081/repository/albert-webapp/', nexusVersion: 'nexus3', protocol: 'http', repository: 'albert-webapp', version: '3.0.6-RELEASE'
            }
        }
        stage('deploy to production') {
            steps {
                deploy adapters: [tomcat9(alternativeDeploymentContext: '', credentialsId: 'tomcat_credentials', path: '', url: 'http://18.219.136.173:8080/')], contextPath: null, war: 'target/web-app.war'
            }
        }
    }
    post {
        success { slackSend(color: 'good', message: "success: ${env.JOB_NAME} #${env.BUILD_NUMBER} - ${env.BUILD_URL}") }
        failure { slackSend(color: 'danger', message: "failed: ${env.JOB_NAME} #${env.BUILD_NUMBER} - ${env.BUILD_URL}") }
        aborted { slackSend(color: 'warning', message: "aborted: ${env.JOB_NAME} #${env.BUILD_NUMBER} - ${env.BUILD_URL}") }
    }
}
